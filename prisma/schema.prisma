generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model categories {
  id    Int     @id(map: "categories_pk") @default(autoincrement())
  name  String  @unique
  tests tests[]
}

model disciplines {
  id                   Int                    @id(map: "disciplines_pk") @default(autoincrement())
  name                 Int                    @default(autoincrement())
  termId               Int
  terms                terms                  @relation(fields: [termId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "disciplines_fk0")
  teatchersDisciplines teatchersDisciplines[]
}

model teachers {
  id                   Int                    @id(map: "teachers_pk") @default(autoincrement())
  name                 String                 @unique
  teatchersDisciplines teatchersDisciplines[]
}

model teatchersDisciplines {
  id           Int         @id(map: "teatchersDisciplines_pk") @default(autoincrement())
  teacherId    Int
  disciplineId Int
  disciplines  disciplines @relation(fields: [disciplineId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "teatchersDisciplines_fk1")
  teachers     teachers    @relation(fields: [teacherId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "teatchersDisciplines_fk0")
  tests        tests[]
}

model terms {
  id          Int           @id(map: "terms_pk") @default(autoincrement())
  number      Int           @unique
  disciplines disciplines[]
}

model tests {
  id                   Int                  @id(map: "tests_pk") @default(autoincrement())
  name                 String               @unique
  pdfUrl               String
  categoryId           Int
  teacherDisciplineId  Int
  categories           categories           @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tests_fk0")
  teatchersDisciplines teatchersDisciplines @relation(fields: [teacherDisciplineId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tests_fk1")
}

model users {
  id       Int    @id(map: "users_pk") @default(autoincrement())
  email    String @unique
  password String
}
